# -*- coding: utf-8 -*-
"""Sales_Prediction_System_2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FjQk9pVb3jaf_b7DR18RLDL4ermsTqI8
"""

pip install pandas matplotlib scikit-learn openpyxl

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import numpy as np

file_path = '/DebtorsOverDue_16.06.2025.xlsx'  # Make sure it's in the same directory
excel_data = pd.ExcelFile(file_path)

df_raw = excel_data.parse('DATA', skiprows=4)

df_raw.columns = ['Sale Bill No.', 'Bill Date', 'Total Days', 'Due Days', 'Bill Amount',
                  'Due Amount', 'Blank1', 'Executive', '0 - 75 Days', '76 - 90 Days', '> 90 Days']

df_clean = df_raw[df_raw['Bill Amount'].notnull() & df_raw['Bill Date'].notnull()]
df_clean['Bill Date'] = pd.to_datetime(df_clean['Bill Date'], errors='coerce')
df_clean['Bill Amount'] = pd.to_numeric(df_clean['Bill Amount'], errors='coerce')
df_clean.dropna(subset=['Bill Date', 'Bill Amount'], inplace=True)

df_clean['Month'] = df_clean['Bill Date'].dt.to_period('M').dt.to_timestamp()
monthly_sales = df_clean.groupby('Month')['Bill Amount'].sum().reset_index()

monthly_sales['Month_Ordinal'] = np.arange(len(monthly_sales))
X = monthly_sales['Month_Ordinal'].values.reshape(-1, 1)
y = monthly_sales['Bill Amount'].values

model = LinearRegression()
model.fit(X, y)

future_months = np.arange(len(monthly_sales), len(monthly_sales) + 3).reshape(-1, 1)
future_sales = model.predict(future_months)
future_dates = pd.date_range(start=monthly_sales['Month'].max() + pd.offsets.MonthBegin(1), periods=3, freq='MS')
forecast_df = pd.DataFrame({'Month': future_dates, 'Predicted Sales': future_sales})

plt.figure(figsize=(12, 6))
plt.plot(monthly_sales['Month'], monthly_sales['Bill Amount'], label='Actual Sales')
plt.plot(forecast_df['Month'], forecast_df['Predicted Sales'], label='Predicted Sales', linestyle='--', marker='o')
plt.title('Monthly Sales and Forecast')
plt.xlabel('Month')
plt.ylabel('Sales Amount')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

print("\nUpcoming 3 Months Predicted Sales:\n")
print(forecast_df)